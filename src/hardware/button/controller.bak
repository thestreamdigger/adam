import os
import time
import subprocess
from gpiozero import Button
from core.config import Config

class ButtonController:
    """Controls the physical button with real-time config updates"""
    def __init__(self):
        self.config = Config()
        self._setup_button()
        self.last_command_time = 0
        self.config.add_observer(self._setup_button)

    def _setup_button(self):
        """Setup button with current config"""
        button_pin = self.config.get('gpio.button')
        long_press_time = self.config.get('timing.long_press_time', 2)
        
        self.button = Button(
            button_pin,
            pull_up=True,
            hold_time=long_press_time
        )
        
        self.button.when_pressed = self._handle_press
        self.button.when_held = self._handle_long_press
        
        self.command_cooldown = self.config.get('timing.command_cooldown', 1)

    def _handle_press(self):
        """Handle short press - activate roulette mode"""
        current_time = time.time()
        if (current_time - self.last_command_time) >= self.command_cooldown:
            self.last_command_time = current_time
            script_path = self.config.get('paths.roulette')
            if os.path.exists(script_path):
                subprocess.run(['sudo', script_path], check=True)

    def _handle_long_press(self):
        """Handle long press - shutdown system"""
        current_time = time.time()
        if (current_time - self.last_command_time) >= self.command_cooldown:
            self.last_command_time = current_time
            script_path = self.config.get('paths.shutdown')
            if os.path.exists(script_path):
                subprocess.run(['sudo', script_path], check=True)

    def cleanup(self):
        """Cleanup resources"""
        self.config.remove_observer(self._setup_button)
